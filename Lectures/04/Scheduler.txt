% Schedulerer for planing aircraft routes
%----------------------------------------

% FLIGHT DATA BASE
% timetable( start, end, listOfFlight)
%   listOfFlight == [ flight ]
%   flight == departure / arrival / code / days

timetable( edinburgh, london,
           [  9:40 / 10:50 / ba4733 / daily,
             13:40 / 14:50 / ba4773 / daily,
             19:40 / 20:50 / ba4833 / [mo,tu,we,th,fr,su] ] ).
timetable( london, edinburgh,
           [  9:40 / 10:50 / ba4732 / daily,
             11:40 / 12:50 / ba4752 / daily,
             18:40 / 19:50 / ba4822 / [mo,tu,we,th,fr] ] ).
timetable( london, ljubljana,
           [ 13:20 / 16:20 / jp212 / [mo,tu,we,fr,su],
             16:30 / 19:30 / ba473 / [mo,we,th,sa] ] ).
timetable( london, zurich,
           [  9:10 / 11:45 / ba614 / daily,
             14:45 / 17:20 / sr805 / daily] ).
timetable( london, milan,
           [  8:30 / 11:20 / ba510 / daily,
             11:00 / 13:50 / az459 / daily] ).
timetable( ljubljana, zurich,
           [ 11:30 / 12:40 / jp322 / [tu,th] ] ).
timetable( ljubljana, london,
           [ 11:10 / 12:20 / jp211 / [mo,tu,we,fr,su],
             20:30 / 21:30 / ba472 / [mo,we,th,sa] ] ).
timetable( milan, london,
           [  9:10 / 10:00 / az458 / daily,
             12:20 / 13:10 / ba511 / daily] ).
timetable( milan, zurich,
           [  9:25 / 10:15 / sr621 / daily,
             12:45 / 13:35 / sr623 / daily] ).
timetable( zurich, ljubljana,
           [ 13:30 / 14:40 / jp323 / [tu,th] ] ).
timetable( zurich, london,
           [ 9:00 / 9:40 / ba613 / [mo,tu,we,th,fr,sa],
            16:10 / 16:55 / sr806 / [mo,tu,we,th,fr,su] ] ).
timetable( zurich, milan,
           [ 7:55 / 8:45 / sr620 / daily] ).

% Finding of the route
% 
% route( StartPlace, EndPlace, Day, Route)
%   Route - the sequence of flights from StartPlace
%           to EndPlace in day Day  

% If a direct flight exists
route( P1, P2, Day, [ P1 / P2 / Code / Departure ] ) :-
   flight( P1, P2, Day, Code, Departure, _).
% Route by transfers:
% Some place P3 exists, that 
% - direct flight P1-P3 exists
% - route P3--P2 exists (RestRoute)
route( P1, P2, Day, [ (P1 / P3 / Code / Departure) | RestRoute] )  :-
  route( P3, P2, Day, RestRoute),
  flight( P1, P3, Day, Code, Departure, Arrival),
  departure_time( RestRoute, Departure2),
  % enough time to make transfer
  time_for_transfer( Arrival, Departure2).

% Utilite to get a flight from the data base
flight( Place1, Place2, Day, Code, Departure, Arrival) :-
   timetable( Place1, Place2, Flightlist),
   member( Departure/ Arrival/ Code/ Daylist , Flightlist),
   day_of_flight( Day, Daylist).

% Utilite to get a day from the scheduler
day_of_flight( Day, Daylist) :-
   member( Day, Daylist).
day_of_flight( Day, daily) :-
   member( Day, [mo,tu,we,th,fr,sa,su]).

%Utilite to get a time of departure for a route
departure_time( [ P1 / P2 / Code / Dep | _], Dep).

% Time procedures
time_for_transfer( Hours1:Mins1, Hours2:Mins2) :-
   60 * (Hours2 - Hours1) + Mins2 - Mins1 >= 40.
 
% List procedures
member( X, [X | _] ).
member( X, [_ | L] ) :-
   member( X, L).

conc([], L, L).
conc([X|L1],L2, [X|L3]) :-
  conc(L1,L2,L3).

permutation( [], []).
permutation( L, [X | P])  :-
  del( X, L, L1),
  permutation( L1, P).

del( X, [X|L], L).
del( X, [Y|L], [Y|L1])  :-
  del( X, L, L1).

% Queries
query3(Town,FN1,[City1 / FN2 / Dep1, City2 / FN3 / Dep2, City3 / FN4 /Dep3])  :-
  permutation( [milan,ljubljana,zurich],[City1,City2,City3]),
  flight( Town, City1, tu, FN1, Dep1, Arr1),
  flight( City1, City2, we, FN2, Dep2, Arr2),
  flight( City2, City3, th, FN3, Dep3, Arr3),
  flight( City3, Town, fr, FN4, Dep4, Arr4).

%?- route(zurich, ljubljana,tu,R),write(R),nl. %tu|we
?- query3(london,Dep,Route),write([london / Dep | Route]),nl.
